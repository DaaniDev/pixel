apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.jfrog.bintray'

apply plugin: 'com.github.dcendents.android-maven'


ext {
    bintrayRepo = "pixel"
    bintrayName = "io.pixel.android"
    libraryName = 'pixel'


    publishedGroupId = 'io.pixel.android'
    artifact = 'pixel'
    libraryVersion = '0.0.2'
    libraryDescription = 'Image loading and Networking for Android backed by Kotlin Coroutines.'

    siteUrl = 'https://github.com/mmobin789/pixel'
    gitUrl = 'https://github.com/mmobin789/pixel.git'

    developerId = 'mmobin789'
    developerName = 'Mobin Munir'
    developerEmail = 'mmobinbutt@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 29
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 29
        versionCode 1
        versionName "0.0.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            /*useProguard false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'*/
        }
    }

}


dependencies {
    //  def core = "1.2.0"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //  implementation "androidx.appcompat:appcompat:1.1.0"
    // implementation "androidx.core:core-ktx:$core"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3"

    // test libs below
    // testImplementation "com.google.truth:truth:1.0.1"
    testImplementation 'junit:junit:4.13'
    // Optional -- Mockito framework
    //   testImplementation 'org.mockito:mockito-core:2.13.0'
    // Optional -- Robolectric environment
    // testImplementation "androidx.test:core:$core"


}
/**
 * This task can be used to generate gradle wrapper and all relevant files in case of loss.
 */
/*task wrapper(type: Wrapper) {
    gradleVersion = '5.6.4'
}*/


//Add these lines to publish library to bintray. These are the ready made scripts made by github user nuuneoi to make uploading to bintray easy.
//Place it at the end of the file
if (project.rootProject.file('local.properties').exists()) {
    apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
    apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
}